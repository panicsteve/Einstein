//	NIE 2.0 public platform file API definitions//	Copyright 1997 Apple Computer, Inc.//	All rights reserved.//	by Jim Schramif not knownGlobalFunctions.InetGrabLinkVerboseor not globalFnHelpStrings.InetGrabLinkVerbose then	begin		knownGlobalFunctions.DNSCancelRequests := 2;		knownGlobalFunctions.DNSGetAddressFromName := 3;		knownGlobalFunctions.DNSGetMailAddressFromName := 3;		knownGlobalFunctions.DNSGetMailServerNameFromDomainName := 3;		knownGlobalFunctions.DNSGetNameFromAddress := 3;		knownGlobalFunctions.InetAddNewLinkEntry := 1;		knownGlobalFunctions.InetAddNewLinkEntryInternal := 1;		knownGlobalFunctions.InetCancelCurrentRequest := 1;		knownGlobalFunctions.InetCancelLink := 3;		knownGlobalFunctions.InetDisconnectLink := 3;		knownGlobalFunctions.InetDisplayStatus := 3;		knownGlobalFunctions.InetGetAllLinksStatus := 0;		knownGlobalFunctions.InetGetDefaultLinkID := 0;		knownGlobalFunctions.InetGetLinkEntry := 1;		knownGlobalFunctions.InetGetLinkStatus := 1;		knownGlobalFunctions.InetGrabLink := 3;		knownGlobalFunctions.InetOpenConnectionSlip := 3;		knownGlobalFunctions.InetReleaseLink := 3;		knownGlobalFunctions.InetSetDefaultLinkID := 1;		knownGlobalFunctions.InetGetExceptionError := 1;		knownGlobalFunctions.InetGetErrorString := 1;		knownGlobalFunctions.InetBuildStatusFrame := 6;		knownGlobalFunctions.InetObjectToString := 1;		knownGlobalFunctions.RegInetLinkStatusChange := 3;		knownGlobalFunctions.UnRegInetLinkStatusChange := 1;		knownGlobalFunctions.InetIPAddressToString := 1;		knownGlobalFunctions.InetIPStringToAddress := 1;		knownGlobalFunctions.InetIsSameIPAddress := 2;		knownGlobalFunctions.InetIsSameIPAddressStr := 2;		knownGlobalFunctions.InetIsValidIPAddress := 1;		knownGlobalFunctions.InetIsValidIPAddressStr := 1;		knownGlobalFunctions.InetIsZeroIPAddress := 1;		knownGlobalFunctions.InetGetIPAddress := 1;		knownGlobalFunctions.InetGrabLinkVerbose := 3;		knownGlobalFunctions.InetReleaseLinkVerbose := 3;				globalFnHelpStrings.DNSCancelRequests := ['globalFn, "(clientFrame, clientSymbol)", 'Run];		globalFnHelpStrings.DNSGetAddressFromName := ['globalFn, "(name, clientFrame, clientSymbol)", 'Run];		globalFnHelpStrings.DNSGetMailAddressFromName := ['globalFn, "(name, clientFrame, clientSymbol)", 'Run];		globalFnHelpStrings.DNSGetMailServerNameFromDomainName := ['globalFn, "(name, clientFrame, clientSymbol)", 'Run];		globalFnHelpStrings.DNSGetNameFromAddress := ['globalFn, "(address, clientFrame, clientSymbol)", 'Run];		globalFnHelpStrings.InetAddNewLinkEntry := ['globalFn, "(newLinkInfo) linkID or nil", 'Run];		globalFnHelpStrings.InetAddNewLinkEntryInternal := ['globalFn, "(newLinkInfo) linkID or nil", 'Run];		globalFnHelpStrings.InetCancelCurrentRequest := ['globalFn, "(linkID)", 'Run];		globalFnHelpStrings.InetCancelLink := ['globalFn, "(linkID, clientFrame, clientSymbol)", 'Run];		globalFnHelpStrings.InetDisconnectLink := ['globalFn, "(linkID, clientFrame, clientSymbol)", 'Run];		globalFnHelpStrings.InetDisplayStatus := ['globalFn, "(linkID, statusView, statusFrame) statusView", 'Run];		globalFnHelpStrings.InetGetAllLinksStatus := ['globalFn, "() linksStatusFrame", 'Run];		globalFnHelpStrings.InetGetDefaultLinkID := ['globalFn, "() linkID", 'Run];		globalFnHelpStrings.InetGetLinkEntry := ['globalFn, "(linkID) linkEntry", 'Run];		globalFnHelpStrings.InetGetLinkStatus := ['globalFn, "(linkID) statusSymbol", 'Run];		globalFnHelpStrings.InetGrabLink := ['globalFn, "(linkID, clientFrame, clientSymbol)", 'Run];		globalFnHelpStrings.InetOpenConnectionSlip := ['globalFn, "(linkID, clientFrame, clientSymbol) view or nil", 'Run];		globalFnHelpStrings.InetReleaseLink := ['globalFn, "(linkID, clientFrame, clientSymbol)", 'Run];		globalFnHelpStrings.InetSetDefaultLinkID := ['globalFn, "(linkID) linkID or nil", 'Run];		globalFnHelpStrings.InetGetExceptionError := ['globalFn, "(exception) number", 'Run];		globalFnHelpStrings.InetGetErrorString := ['globalFn, "(error) string", 'Run];		globalFnHelpStrings.InetBuildStatusFrame := ['globalFn, "(linkID, infoStatus, infoError, infoText1, infoText2, infoText3) statusFrame", 'Run];		globalFnHelpStrings.InetObjectToString := ['globalFn, "(obj) string", 'Run];		globalFnHelpStrings.RegInetLinkStatusChange := ['globalFn, "(uniqueSymbol, clientFrame, clientSymbol) uniqueSymbol", 'Run];		globalFnHelpStrings.UnRegInetLinkStatusChange := ['globalFn, "(uniqueSymbol)", 'Run];		globalFnHelpStrings.InetIPAddressToString := ['globalFn, "(address) string", 'Run];		globalFnHelpStrings.InetIPStringToAddress := ['globalFn, "(addressStr) address", 'Run];		globalFnHelpStrings.InetIsSameIPAddress := ['globalFn, "(address1, address2) true or nil", 'Run];		globalFnHelpStrings.InetIsSameIPAddressStr := ['globalFn, "(addressStr1, addressStr2) true or nil", 'Run];		globalFnHelpStrings.InetIsValidIPAddress := ['globalFn, "(address) true or nil", 'Run];		globalFnHelpStrings.InetIsValidIPAddressStr := ['globalFn, "(addressStr) true or nil", 'Run];		globalFnHelpStrings.InetIsZeroIPAddress := ['globalFn, "(address) true or nil", 'Run];		globalFnHelpStrings.InetGetIPAddress := ['globalFn, "(whichAddress) address", 'Run];		globalFnHelpStrings.InetGrabLinkVerbose := ['globalFn, "(linkID, clientFrame, clientSymbol)", 'Run];		globalFnHelpStrings.InetReleaseLinkVerbose := ['globalFn, "(linkID, clientFrame, clientSymbol)", 'Run];	end;